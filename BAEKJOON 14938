import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		int r = Integer.parseInt(st.nextToken());
		int[] loc = new int[n+1];
		int[][] map = new int[n+1][n+1];
		int max = 0;
		
		st = new StringTokenizer(br.readLine());
		for (int i = 1; i <=n; i++) {
			loc[i] = Integer.parseInt(st.nextToken());
		}
		for (int i = 1; i <=n; i++) {
			for (int j = 1; j <=n; j++) {
				if(i!=j)
					map[i][j] = 100000;
			}
		}
		for (int i = 0; i < r; i++) {
			st = new StringTokenizer(br.readLine());
			int y = Integer.parseInt(st.nextToken());
			int x = Integer.parseInt(st.nextToken());
			int d = Integer.parseInt(st.nextToken());
			map[y][x] = map[x][y] = d;
		}
		for (int k = 1; k <=n; k++) {
			for (int i = 1; i <=n; i++) {
				if(i == k) continue;
				for (int j = 1; j <=n; j++) {
					if(k == j || i == j) continue;
					map[i][j] = Math.min(map[i][j], map[i][k] + map[k][j]);
				}
			}
		}
		for (int i = 1; i <=n; i++) {
			int sum = 0;
			for (int j = 1; j <=n; j++) {
				if(map[i][j] <= m)
					sum += loc[j];
			}
			max = Math.max(max, sum);
		}
		System.out.println(max);
	}
}
