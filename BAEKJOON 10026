import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {
	static char[][] arr;
	static boolean[][] visit, select;
	static int N, cntv, cnts;
	static int[] dy = { -1, 1, 0, 0 }, dx = { 0, 0, -1, 1 };

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		arr = new char[N][];	
		for (int i = 0; i < N; i++) {
			String str = br.readLine();
			arr[i] = str.toCharArray();
		}
		visit = new boolean[N][N];
		select = new boolean[N][N];
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				if (!visit[i][j]) {
					DFS(i, j, arr[i][j]);
					cntv++;
				}
				if(!select[i][j]) {
					DFS2(i, j, arr[i][j]);
					cnts++;
				}
			}
		}
		System.out.println(cntv + " " + cnts);
	}
    
	private static void DFS(int y, int x, char c) {
		visit[y][x] = true;
		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];
			if (ny < 0 || nx < 0 || ny >= N || nx >= N || visit[ny][nx])
				continue;
			if (arr[ny][nx] == c) {
				visit[ny][nx] = true;
				DFS(ny, nx, c);
			}
		}
	}
    
	private static void DFS2(int y, int x, char c) {
		select[y][x] = true;
		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];
			if (ny < 0 || nx < 0 || ny >= N || nx >= N || select[ny][nx])
				continue;
			if (c == 'R' || c == 'G') {
				if (arr[ny][nx] == 'R' || arr[ny][nx] == 'G') {
					select[ny][nx] = true;
					DFS2(ny, nx, c);
				}
			}else {
				if (arr[ny][nx] == c) {
					select[ny][nx] = true;
					DFS2(ny, nx, c);
				}
			}
		}
	}
}
