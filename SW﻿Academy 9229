import java.io.*;
import java.util.*;

public class Solution {
	static int[] kg, resert = new int[2];
	static int N, M, MAX, SUM;

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int T = Integer.parseInt(br.readLine());

		for (int t = 1; t <= T; t++) {
			MAX = 0;
			StringTokenizer st = new StringTokenizer(br.readLine());
			N = Integer.parseInt(st.nextToken());
			M = Integer.parseInt(st.nextToken());
			kg = new int[N];
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < N; i++) {
				kg[i] = Integer.parseInt(st.nextToken());
			}
			comb(0, 0);
			if(MAX == 0)
				MAX--;
			System.out.println("#" + t + " " + MAX);
		}
	}

	static void comb(int start, int index) {
		if (index == 2) {
			for (int i = 0; i < 2; i++) {
				SUM += resert[i];
			}
			if(SUM<=M)
				MAX = Math.max(SUM, MAX);
			SUM=0;
			return;
		}
		for (int i = start; i < N; i++) {
			resert[index] = kg[i];
			comb(i + 1, index + 1);
		}
	}
}
