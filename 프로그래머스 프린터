import java.util.LinkedList;
import java.util.Queue;

class Solution {
    	public static int solution(int[] priorities, int location) {
		int answer = 0;
		Queue<Node> q = new LinkedList<>();
		for (int i = 0; i < priorities.length; i++) {
			q.offer(new Node(i,priorities[i])); // 큐에 현재 순서와 중요도 모두 넣음
		}
		while(!q.isEmpty()) { // 큐가 빌때까지 반복
			Node n = q.poll();
			boolean check = false;
			for (Node m : q) { // 빼낸 중요도보다 더큰 중요도가있는지 체크
				if(n.b < m.b) {
					check = true;
					break;
				}
			}
			if(check) { // 자기보다 큰 중요도있으므로 큐뒤에 삽입
				q.offer(n);
			}else {
				answer++; // 횟수 증가시킴
				if(n.a == location) //우리가 원하는값인지 체크
					break;
			}
		}
		return answer;
	}
	
	public static class Node{
		int a, b;
		Node(int a , int b){
			this.a = a;
			this.b = b;
		}
	}
}
