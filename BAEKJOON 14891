import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static int[][] map;
	static int ans, K, num, dir, temp;
	static boolean[] visit;

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		ans = 0;
		map = new int[4][8];
		for (int i = 0; i < 4; i++) {
			String str = br.readLine();
			for (int j = 0; j < 8; j++) {
				map[i][j] = str.charAt(j) - '0';
			}
		}
		K = Integer.parseInt(br.readLine());
		for (int i = 0; i < K; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			num = Integer.parseInt(st.nextToken()) - 1;
			dir = Integer.parseInt(st.nextToken());
			check();
			move(num, dir);
			int r = dir, l = dir;
			for (int j = num; j < 3; j++) {
				if (visit[j]) {
					r *= -1;
					move(j + 1, r);
				} else
					break;
			}
			for (int j = num; j > 0; j--) {
				if (visit[j - 1]) {
					l *= -1;
					move(j - 1, l);
				} else
					break;
			}
		}
		int x = 1;
		for (int i = 0; i < 4; i++) {
			ans += map[i][0] * x;
			x *= 2;
		}
		System.out.println(ans);

	}

	private static void move(int clock, int d) {
		if (d == 1) {
			temp = map[clock][7];
			for (int i = 7; i > 0; i--) {
				map[clock][i] = map[clock][i - 1];
			}
			map[clock][0] = temp;
		} else {
			temp = map[clock][0];
			for (int i = 0; i < 7; i++) {
				map[clock][i] = map[clock][i + 1];
			}
			map[clock][7] = temp;
		}
	}

	private static void check() {
		visit = new boolean[3];
		for (int i = 0; i < 3; i++) {
			if (map[i][2] != map[i + 1][6])
				visit[i] = true;
		}
	}
}
