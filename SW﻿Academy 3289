import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Solution {
	static int N, M;
	static int[] arr;

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());

		for (int t = 1; t <= T; t++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			N = Integer.parseInt(st.nextToken());
			M = Integer.parseInt(st.nextToken());
			arr = new int[N + 1];
			make();
			System.out.print("#"+t+" ");
			for (int i = 0; i < M; i++) {
				st = new StringTokenizer(br.readLine());
				if (st.nextToken().equals("0"))
					unioun(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken()));
				else {
					if (find(Integer.parseInt(st.nextToken())) == find(Integer.parseInt(st.nextToken())))
						System.out.print("1");
					else
						System.out.print("0");
				}
			}
			System.out.println();
		}
	}

	private static int find(int a) {
		if (a == arr[a])
			return a;
		return arr[a] = find(arr[a]);
	}

	private static void unioun(int a, int b) {
		int aroot = find(a);
		int broot = find(b);
		if (aroot != broot)
			arr[broot] = aroot;
	}

	private static void make() {
		for (int i = 1; i <= N; i++) {
			arr[i] = i;
		}
	}
}
