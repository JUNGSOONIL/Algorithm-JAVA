import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
	static int V, E, ans;
	static int[] visit;
	static ArrayList<Integer>[] list;
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		for (int t = 1; t <= T; t++) {
			ans = 0;
			StringTokenizer st = new StringTokenizer(br.readLine());
			V = Integer.parseInt(st.nextToken());
			E = Integer.parseInt(st.nextToken());
			visit = new int[V+1];
			list = new ArrayList[V+1];
			for (int i = 1; i < V+1; i++) {
				list[i] = new ArrayList<>();
			}
			for (int i = 0; i < E; i++) {  
				st = new StringTokenizer(br.readLine());
				int y = Integer.parseInt(st.nextToken());
				int x = Integer.parseInt(st.nextToken());
				list[y].add(x);
				list[x].add(y);
			}
			for (int i = 1; i < V+1; i++) {
				if(visit[i] == 0)
					bfs(i);	
			}
			if(ans == -1)
				System.out.println("NO");
			else
				System.out.println("YES");
		}
	}

	private static void bfs(int x) {
		Queue<Integer> q = new LinkedList<>();
		visit[x] = 1;
		q.offer(x);
		while(!q.isEmpty()) {
			int n = q.poll();
			for (int next : list[n]) {
				if(visit[next] == 0) {
					visit[next] = visit[n]+1;
					q.offer(next);
				}else {
					if(visit[next]%2 == visit[n]%2) {
						ans = -1;
						return;
					}
				}	
			}
		}
	}
}
