import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		int[][] map = new int[N+1][N+1];
		for (int i = 1; i <=N; i++) {
			for (int j = 1; j <=N; j++) {
				map[i][j] = 5;
				if(i==j)
					map[i][j] = 0;
			}
		}
		for (int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			map[a][b] = map[b][a] = 1;
		}
		
		for (int k = 1; k <=N; k++) {
			for (int i = 1; i <=N; i++) {
				if(k == i) continue;
				for (int j = 1; j <=N; j++) {
					if(k ==j && i == j) continue;
					map[i][j] = Math.min(map[i][j], map[i][k] + map[k][j]);
				}
			}
		}
		int max = Integer.MAX_VALUE;
		for (int i = 1; i <=N; i++) {
			int sum = 0;
			for (int j = 1; j <=N; j++) {
				sum += map[i][j];
			}
			max = Math.min(max, sum);
		}
		for (int i = 1; i <=N; i++) {
			int sum = 0;
			for (int j = 1; j <=N; j++) {
				sum += map[i][j];
			}
			if(sum == max) {
				System.out.println(i);
				break;
			}
		}
	}
}
