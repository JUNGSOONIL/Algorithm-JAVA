import java.io.*;
import java.util.*;

public class Main {
	static int[] in, out;
	static boolean[] select;
	static StringBuilder sb = new StringBuilder();
	static LinkedHashSet<String> set = new LinkedHashSet<>();
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		in = new int[N];
		out = new int[M];
		select = new boolean[N];
		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			in[i] =Integer.parseInt(st.nextToken());
		}
		Arrays.sort(in);
		comb(0,0);
		for (String string : set) {
			sb.append(string);
		}
		System.out.println(sb);
	}

	static void comb(int start,int index) throws Exception{
		if (index == out.length) {
			String str = "";
			for (int i = 0; i < out.length; i++) {
				str += out[i]+" ";
			}
			set.add(str+"\n");
			return;
		}
		for (int i = 0; i < in.length; i++) {
			if(select[i])
				continue;
			out[index] = in[i];
			select[i] = true;
			comb(i,index + 1);
			select[i] = false;
		}
	}
}
