import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		for (int t = 1; t <= T; t++) {
			int N = Integer.parseInt(br.readLine());
			int[][] node = new int[N+2][2];
			for (int i = 0; i < N+2; i++) {
				StringTokenizer st = new StringTokenizer(br.readLine());
				node[i][0] = Integer.parseInt(st.nextToken());
				node[i][1] = Integer.parseInt(st.nextToken());
			}
			int[][] arr =new int[N+2][N+2];
			for (int i = 0; i < N+2; i++) {
				Arrays.fill(arr[i], 9999);
			}
			for (int i = 0; i < N+2; i++) {
				for (int j = 0; j < N+2; j++) {
					if(i==j) arr[i][j] = 0;
					else arr[i][j] = Math.abs(node[i][0]-node[j][0]) + Math.abs(node[i][1]-node[j][1])<=1000 ? 1 : 9999;
				}
			}
			for (int k = 0; k < N+2; k++) {
				for (int i = 0; i < N+2; i++) {
					if(k!=i) {
						for (int j = 0; j < N+2; j++) {
							if(k != j && i!= j)
								arr[i][j] = Math.min(arr[i][k] + arr[k][j], arr[i][j]);
						}
					}
				}
			}
			if(arr[0][N+1] >= 9999)
				System.out.println("sad");
			else
				System.out.println("happy");
		}
	}
}
