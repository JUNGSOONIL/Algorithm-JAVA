import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int input[] = new int[N];
		StringTokenizer st = new StringTokenizer(br.readLine());
		for (int i = 0; i < N; i++) {
			input[i] = Integer.parseInt(st.nextToken());
		}
		if(np(input)) {
			for (int i = 0; i < N; i++) {
				System.out.print(input[i] + " ");
			}
		}else
			System.out.println(-1);
	}
	    // 다음 큰 순열 있으면 true 없으면 false
		private static boolean np(int[] numbers) {
			
			int N = numbers.length;
			
			//1. 꼭대기 i 를 찾는다. 꼭대기를 통해 교환위치 i-1 찾는다.
			int i = N - 1;
			while (i>0 &&numbers[i-1]>=numbers[i]) --i;
			
			if(i==0) return false;
			
			//2. i-1 위치값하고 교환할 큰 값 찾기
			int j = N - 1;
			
			while(numbers[i-1]>=numbers[j]) --j;
			
			// 3. i-1 위치값과 j 위치값 교환
			swap(numbers,i-1,j);
			
			// 4. 꼭대기부터 멘 뒤까지 내림차순 형태의 순열을 오름차순으로 변경
			int k = N - 1;
			while(i<k) {
				swap(numbers,i++,k--);
			}
			return true;
		}
		private static void swap(int[] numbers, int i , int j) {
			int temp = numbers[i];
			numbers[i] = numbers[j];
			numbers[j] = temp;
		}
}
