package BJ;

import java.io.*;
import java.util.*;

public class BJ2961_2 {

	static int[] sin, sem;
	static int T, ans = Integer.MAX_VALUE, S = 1, R, count;
	static boolean[] select;
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		T = Integer.parseInt(br.readLine());
		sin = new int[T];
		sem = new int[T];
		select = new boolean[T];
		for (int t = 0; t < T; t++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			sin[t] = Integer.parseInt(st.nextToken());
			sem[t] = Integer.parseInt(st.nextToken());
		}
		subset(0);
		
		System.out.println(ans);
		
	}

	private static void subset(int index) {
		if (index == select.length) {
			for (int i = 0; i < select.length; i++) {
				if(select[i]) {
					S*=sin[i];
					R+=sem[i];
					count++;
				}
			}
			if(count == 0)
				return;
			System.out.println(S+","+R);
			ans = Math.min(ans, Math.abs(S-R));
			S = 1; R = 0;count=0;
			return;
		}
		select[index] = true;
		subset(index+1);
		select[index] = false;
		subset(index+1);
	}
}
