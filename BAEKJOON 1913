import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

	static int map[][], dy[] = { 0, 1, 0, -1 }, dx[] = { 1, 0, -1, 0 }; // 하 우 상 좌 순으로 탐색
	static int ansy, ansx, N, M; // 좌표 저장할 변수
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		M = Integer.parseInt(br.readLine());
		map = new int[N][N];
		sanil();
		print();
	}
	private static void sanil() {
		int  ny = -1, nx = 0, index = 0, count = N*N; // 카운트를 max 값으로 두고 하나씩 빼면서 저장.
		while (count >= 1) {
			nx = nx + dx[index];
			ny = ny + dy[index];
			if (nx < 0 || ny < 0 || nx >= N || ny >= N || map[ny][nx] != 0) { // 범위 벗어나거나 이미 값이 존재하면
				ny = ny - dy[index];
				nx = nx - dx[index];
				index = (index + 1) % 4; //0 1 2 3 으로 반복 돌리기위해서
				continue;
			}
			if(count == M ) { // 원하는 값과 같은 상태면 좌표 값을 저장하는데 시작이 0,0 이라 +1해줌
				ansy = ny+1;
				ansx = nx+1;
			}
			map[ny][nx] = count--; // 배열에 값 넣어줌.
		}
	}
	private static void print() {
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++)
				sb.append(map[i][j] + " ");
			sb.append("\n");
		}
		sb.append(ansy+" "+ansx);
		System.out.println(sb);
	}
}
