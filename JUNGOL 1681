import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	
	static int[][] map;
	static boolean[] visit;
	static int ans = Integer.MAX_VALUE, N;
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		map = new int[N][N];
		visit = new boolean[N];

		for (int i = 0; i < N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int j = 0; j < N; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		perm(0,0,0);
		System.out.println(ans);
	}
	
	private static void perm(int start, int index, int sum) {
		if(sum >= ans)
			return;
		if(index == N-1) {
			if(map[start][0] != 0)
				ans = Math.min(ans, sum+map[start][0]);
			return;
		}
		for (int i = 1; i < N; i++) {
			if(map[start][i] != 0 && !visit[i]) {
				visit[i] = true;
				perm(i,index+1,sum+map[start][i]);
				visit[i] = false;
			}
		}
	}
}
