package BJ;

import java.io.*;
import java.util.StringTokenizer;

public class BJ16926 {
	static int[] dy = { 1, 0, -1, 0 };
	static int[] dx = { 0, 1, 0, -1 };

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		int R = Integer.parseInt(st.nextToken());
		
		int[][] arr = new int[N][M];
		int index = 0, keep1, keep2;
		
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		int end = Math.min(N,M)/2;
		for (int t = 0; t < R; t++) {
			for (int i = 0; i <end; i++) {
				int x = i;
				int y = i;
				index = 0;
				keep1 = arr[y][x];
				while (index < 4) {
					x += dx[index];
					y += dy[index];
					if(x < i || x >= M-i || y < i || y>= N-i) {
						x -= dx[index];
						y -= dy[index];
						index++;
						continue;
					}
					keep2 = arr[y][x];
	                arr[y][x] = keep1;
	                keep1 = keep2;
				}
			}
		}
		
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
	}
}
