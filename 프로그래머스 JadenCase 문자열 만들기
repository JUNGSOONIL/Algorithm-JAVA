public static String solution(String s) {
    	String[] arr = s.split(" ");
    	if(s.substring(s.length() - 1, s.length()).equals(" ")) { // 젤 마지막 문자가 공백인지 체크
    		arr[arr.length-1] += " "; // 공백이면 마지막 문자열에 공백 추가
        }
        StringBuilder sb = new StringBuilder();
        for (int t = 0; t < arr.length; t++) {
        	String str = arr[t];
        	if(" ".equals(str) || str.length() == 0) {
        		sb.append(" ");
        		continue;
        	}
        	
        	if(str.charAt(0) >= '0' && str.charAt(0) <= '9') { // 첫문자가 숫자
        		String ss = str.charAt(0)+"";
        		for (int i = 1; i < str.length(); i++) {
        			if(str.charAt(i) >= 'A' && str.charAt(i) <= 'Z')
        				ss+= (char)(str.charAt(i) + 32);
        			else
        				ss+= str.charAt(i);
				}
        		sb.append(ss).append(" ");
        	}else if(str.charAt(0) >= 'a' && str.charAt(0) <= 'z'){ // 첫문자가 소문자
        		String ss = (char)(str.charAt(0)-32)+""; // 소문자를 대문자로
        		for (int i = 1; i < str.length(); i++) {
        			if(str.charAt(i) >= 'A' && str.charAt(i) <= 'Z')
        				ss+= (char)(str.charAt(i) + 32);
        			else
        				ss+= str.charAt(i);
				}
        		sb.append(ss).append(" ");
        	}else if(str.charAt(0) >= 'A' && str.charAt(0) <= 'Z') { // 첫문자가 대문자
        		String ss = str.charAt(0)+"";
        		for (int i = 1; i < str.length(); i++) {
        			if(str.charAt(i) >= 'A' && str.charAt(i) <= 'Z')
        				ss+= (char)(str.charAt(i) + 32);
        			else
        				ss+= str.charAt(i);
				}
        		sb.append(ss).append(" ");
        	}
        }
        sb.setLength(sb.length()-1); // 마지막 추가한 공백 제거
        String answer = sb.toString();
        return answer;
    }
